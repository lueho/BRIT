# Generated by Django 3.2.10 on 2022-03-30 10:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryAlgorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('source_module', models.CharField(max_length=255, null=True)),
                ('function_name', models.CharField(max_length=56, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False, verbose_name='Default for this combination of geodataset and feedstock')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAlgorithmParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptive_name', models.CharField(max_length=56)),
                ('short_name', models.CharField(max_length=28, validators=[django.core.validators.RegexValidator(code='invalid_parameter_name', message='Invalid parameter short_name. Do not use spaceor special characters.', regex='^\\w{1,28}$')])),
                ('description', models.TextField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('is_required', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAlgorithmParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('type', models.IntegerField(choices=[(1, 'Numeric'), (2, 'Selection')], default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('value', models.FloatField()),
                ('standard_deviation', models.FloatField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAmountShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.FloatField(default=0.0)),
                ('standard_deviation', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='RunningTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField()),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Custom Scenario', max_length=56)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioInventoryConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Changed'), (2, 'Running'), (3, 'Finished')], default=1)),
                ('scenario', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventories.scenario')),
            ],
        ),
    ]
