# Generated by ChatGPT on 2025-09-24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("properties", "0003_alter_property_publication_status_and_more"),
        ("processes", "0002_processcategory_process_processinforesource_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="process",
            name="sources",
        ),
        migrations.RemoveField(
            model_name="process",
            name="temperature_max",
        ),
        migrations.RemoveField(
            model_name="process",
            name="temperature_min",
        ),
        migrations.RemoveField(
            model_name="process",
            name="temperature_unit",
        ),
        migrations.RemoveField(
            model_name="process",
            name="yield_max",
        ),
        migrations.RemoveField(
            model_name="process",
            name="yield_min",
        ),
        migrations.RemoveField(
            model_name="process",
            name="yield_unit",
        ),
        migrations.AddField(
            model_name="processmaterial",
            name="quantity_unit",
            field=models.ForeignKey(
                blank=True,
                help_text="Unit describing the quantity when provided.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="properties.unit",
            ),
        ),
        migrations.AddField(
            model_name="processmaterial",
            name="quantity_value",
            field=models.DecimalField(
                blank=True,
                decimal_places=4,
                help_text="Representative quantity for the material (e.g. 2.5).",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="processmaterial",
            name="stage",
            field=models.CharField(
                blank=True,
                help_text="Stage of the process where this material is relevant (e.g. preprocessing).",
                max_length=128,
            ),
        ),
        migrations.AddField(
            model_name="processmaterial",
            name="stream_label",
            field=models.CharField(
                blank=True,
                help_text="Optional label to distinguish parallel streams for the same material.",
                max_length=128,
            ),
        ),
        migrations.AlterField(
            model_name="processmaterial",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Additional context such as required pre-treatment or quality specs.",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="processmaterial",
            unique_together=set(),
        ),
        migrations.AddIndex(
            model_name="processmaterial",
            index=models.Index(
                fields=["process", "role", "order"],
                name="processmat_process_r_0d0e2b_idx",
            ),
        ),
        migrations.CreateModel(
            name="ProcessOperatingParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "parameter",
                    models.CharField(
                        choices=[
                            ("temperature", "Temperature"),
                            ("pressure", "Pressure"),
                            ("residence_time", "Residence time"),
                            ("throughput", "Throughput"),
                            ("energy_demand", "Specific energy demand"),
                            ("yield", "Yield"),
                            ("ph", "pH"),
                            ("custom", "Custom"),
                        ],
                        help_text="Type of operating parameter (e.g. temperature, yield).",
                        max_length=32,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Override label for the parameter (used for custom entries).",
                        max_length=255,
                    ),
                ),
                (
                    "value_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Lower bound for the operating window.",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "value_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Upper bound for the operating window.",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "nominal_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Single representative value when no range is required.",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "basis",
                    models.CharField(
                        blank=True,
                        help_text="Basis or conditions for the measurement (e.g. wet basis).",
                        max_length=100,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operating_parameters",
                        to="processes.process",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        blank=True,
                        help_text="Unit describing the parameter values.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="properties.unit",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.AddIndex(
            model_name="processoperatingparameter",
            index=models.Index(
                fields=["process", "parameter", "order"],
                name="processoper_process_p_98f0f0_idx",
            ),
        ),
    ]
