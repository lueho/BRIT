# Generated by Django 5.2.6 on 2025-09-24 12:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import utils.object_management.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bibliography", "0003_alter_author_publication_status_and_more"),
        ("materials", "0003_alter_analyticalmethod_publication_status_and_more"),
        ("processes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProcessCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("private", "Private"),
                            ("review", "Under Review"),
                            ("published", "Published"),
                            ("declined", "Declined"),
                            ("archived", "Archived"),
                        ],
                        default="private",
                        max_length=10,
                    ),
                ),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        default=utils.object_management.models.get_default_owner_pk,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Process category",
                "verbose_name_plural": "Process categories",
            },
        ),
        migrations.CreateModel(
            name="Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Created at",
                    ),
                ),
                (
                    "lastmodified_at",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Last modified at",
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("private", "Private"),
                            ("review", "Under Review"),
                            ("published", "Published"),
                            ("declined", "Declined"),
                            ("archived", "Archived"),
                        ],
                        default="private",
                        max_length=10,
                    ),
                ),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "short_description",
                    models.CharField(
                        blank=True,
                        help_text="One sentence summary used in cards and list views.",
                        max_length=512,
                    ),
                ),
                (
                    "mechanism",
                    models.CharField(
                        blank=True,
                        help_text="Dominant conversion mechanism (e.g. fermentation, pyrolysis).",
                        max_length=255,
                    ),
                ),
                (
                    "temperature_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Lower operating temperature bound.",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "temperature_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Upper operating temperature bound.",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "temperature_unit",
                    models.CharField(
                        choices=[
                            ("celsius", "°C"),
                            ("kelvin", "K"),
                            ("fahrenheit", "°F"),
                        ],
                        default="celsius",
                        max_length=16,
                    ),
                ),
                (
                    "yield_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum yield percentage.",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "yield_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum yield percentage.",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "yield_unit",
                    models.CharField(
                        choices=[("percent", "%")], default="percent", max_length=16
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Optional illustrative image for cards or detail views.",
                        null=True,
                        upload_to="processes/process_images/",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "lastmodified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_lastmodified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last modified by",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        default=utils.object_management.models.get_default_owner_pk,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional parent process that groups this technology.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="processes.process",
                    ),
                ),
                (
                    "sources",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Literature sources that describe this process.",
                        related_name="processes",
                        to="bibliography.source",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True,
                        help_text="High level categories such as thermochemical or biochemical.",
                        related_name="processes",
                        to="processes.processcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["name", "id"],
            },
        ),
        migrations.CreateModel(
            name="ProcessInfoResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("internal", "Internal page"),
                            ("document", "Document upload"),
                            ("external", "External link"),
                        ],
                        default="external",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        help_text="Target URL for internal or external resources.",
                        max_length=1023,
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        blank=True, null=True, upload_to="processes/info_resources/"
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="info_resources",
                        to="processes.process",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="ProcessLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=255)),
                (
                    "url",
                    models.CharField(
                        help_text="Relative or absolute URL to navigate to.",
                        max_length=1023,
                    ),
                ),
                (
                    "open_in_new_tab",
                    models.BooleanField(
                        default=False,
                        help_text="Open the link in a new browser tab/window.",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="processes.process",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="ProcessMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("input", "Input"), ("output", "Output")],
                        max_length=10,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Optional order for display purposes."
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Additional context such as required pre-treatment.",
                        max_length=255,
                    ),
                ),
                (
                    "optional",
                    models.BooleanField(
                        default=False,
                        help_text="Flag inputs/outputs that are optional rather than mandatory.",
                    ),
                ),
                (
                    "material",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="process_materials",
                        to="materials.material",
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="process_materials",
                        to="processes.process",
                    ),
                ),
            ],
            options={
                "ordering": ["role", "order", "id"],
                "unique_together": {("process", "material", "role")},
            },
        ),
        migrations.AddField(
            model_name="process",
            name="materials",
            field=models.ManyToManyField(
                blank=True,
                related_name="processes",
                through="processes.ProcessMaterial",
                to="materials.material",
            ),
        ),
        migrations.CreateModel(
            name="ProcessReference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Custom title for references that are not stored as sources.",
                        max_length=255,
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True, help_text="Optional URL for the custom reference."
                    ),
                ),
                (
                    "reference_type",
                    models.CharField(
                        blank=True,
                        help_text="Type/category of the reference (e.g. website, article).",
                        max_length=50,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="references",
                        to="processes.process",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="process_references",
                        to="bibliography.source",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
    ]
