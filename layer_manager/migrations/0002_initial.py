# Generated by Django 3.2.10 on 2022-03-30 10:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventories', '0002_initial'),
        ('materials', '0001_initial'),
        ('distributions', '0001_initial'),
        ('layer_manager', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='layer',
            name='feedstock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.sampleseries'),
        ),
        migrations.AddField(
            model_name='layer',
            name='layer_fields',
            field=models.ManyToManyField(to='layer_manager.LayerField'),
        ),
        migrations.AddField(
            model_name='layer',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventories.scenario'),
        ),
        migrations.AddField(
            model_name='distributionshare',
            name='component',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='materials.materialcomponent'),
        ),
        migrations.AddField(
            model_name='distributionshare',
            name='distribution_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='layer_manager.distributionset'),
        ),
        migrations.AddField(
            model_name='distributionset',
            name='aggregated_distribution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='layer_manager.layeraggregateddistribution'),
        ),
        migrations.AddField(
            model_name='distributionset',
            name='timestep',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='distributions.timestep'),
        ),
        migrations.AddConstraint(
            model_name='layer',
            constraint=models.UniqueConstraint(fields=('table_name',), name='unique table_name'),
        ),
    ]
