"use strict";const fieldConfig={catchment:{include:!0,format:t=>t||""},collector:{include:!0,format:t=>t||""},collection_system:{include:!0,format:t=>t||""},waste_category:{include:!0,format:t=>t||""},allowed_materials:{include:!0,format:t=>formatList(t,", ")},forbidden_materials:{include:!0,format:t=>formatList(t,", ")},fee_system:{include:!0,format:t=>t||""},population:{include:!1,format:t=>t?t.toLocaleString():""},population_density:{include:!1,format:t=>t?t.toFixed(2):""},comments:{include:!1,format:t=>formatList(t,"; ")},valid_from:{include:!1,format:t=>t?new Date(t).toLocaleDateString():""},lastmodified_at:{include:!1,format:t=>t?new Date(t).toLocaleDateString():""},sources:{include:!0,format:t=>{const e=formatUrls(t);return e?`<ul class="list-disc pl-4">${e}</ul>`:""}}};function featureClickHandler(t,e){resetFeatureStyles(e);const n=new Set;e.eachLayer((e=>{if(e instanceof L.Polygon){const o=e.toGeoJSON(),a=[t.latlng.lng,t.latlng.lat];turf.inside(a,o)&&n.add(e)}}));let o="No features found",a="";n.size&&(o=[...n][0].feature.properties.catchment,a=[...n].map((t=>{const e=t.feature.properties.waste_category,n=t.feature.properties.collection_system;return selectFeature(t),`<a href="javascript:void(0)" onclick="getFeatureDetails(${t.feature.properties.id})">${e} - ${n}</a><br>`})).join("")),map.openPopup(`<strong>${o}</strong><br/>${a}`,t.latlng,{offset:L.point(0,-24)})}function createFeatureLayerBindings(t){t.bindTooltip((function(t){return t.feature.properties.catchment.toString()})),t.bindPopup((function(t){return t.feature.properties.catchment.toString()})),t.on("click",(e=>featureClickHandler(e,t)))}function scrollToSummaries(){const t=document.getElementById("filter_result_card");t&&t.scrollIntoView({behavior:"smooth",block:"start"})}function updateUrls(t){const e=parseFilterParameters();e.append("load_features","true");const n=new URLSearchParams;n.append("next","/waste_collection/collections/map/?"+e.toString());try{const t=document.getElementById("btn-collection-create"),e=t.dataset.hrefTemplate+"?"+n.toString();t.setAttribute("href",e)}catch(t){}try{const e=document.getElementById("btn-collection-detail"),n=e.dataset.hrefTemplate.replace("__pk__",t.toString());e.setAttribute("href",n),e.classList.remove("d-none")}catch(t){}try{const e=document.getElementById("btn-collection-update"),o=e.dataset.hrefTemplate.replace("__pk__",t.toString())+"?"+n.toString();e.setAttribute("href",o)}catch(t){}try{const e=document.getElementById("btn-collection-copy"),o=e.dataset.hrefTemplate.replace("__pk__",t.toString())+"?"+n.toString();e.setAttribute("href",o)}catch(t){}try{const e=document.getElementById("btn-collection-delete").dataset.hrefTemplate.replace("__pk__",t.toString())+"?"+n.toString();$("#btn-collection-delete").modalForm({formURL:e,errorClass:".is-invalid"})}catch(t){}}function addDetailViewButton(){}function clickedPrivateMapButton(){const t=document.getElementById("link-map-private");window.location.href=t.dataset.hrefTemplate+"?"+parseFilterParameters().toString()}function clickedPublicMapButton(){const t=document.getElementById("link-map-public");window.location.href=t.dataset.hrefTemplate+"?"+parseFilterParameters().toString()}function clickedListButton(){const t=document.getElementById("btn-collections-as-list");window.location.href=t.dataset.hrefTemplate+"?"+parseFilterParameters().toString()}function clickedListLink(){const t=document.getElementById("link-collections-as-list");window.location.href=t.dataset.hrefTemplate+"?"+parseFilterParameters().toString()}function adaptMapConfig(){mapConfig.layerOrder=["features","region","catchment"]}