"use strict";let isProgrammaticChange=!1;const fieldConfig={nuts_id:{include:!0,format:e=>e||""},name:{include:!0,format:e=>e||""},population:{include:!0,format:e=>e||""},population_density:{include:!0,format:e=>e||""},urban_rural_remoteness:{include:!0,format:e=>e||""}};function lockForm(){document.querySelectorAll("select").forEach((e=>e.disabled=!0))}function unlockForm(){document.querySelectorAll("select").forEach((e=>e.disabled=!1))}async function updateLayers({region_params:e,catchment_params:t,feature_params:o}={}){const n=[e&&fetchRegionGeometry(e),t&&fetchCatchmentGeometry(t),o&&fetchFeatureGeometries(o)].filter(Boolean);prepareMapRefresh(),await refreshMap(n)}function cleanup(){hideLoadingIndicator(),unlockForm(),unlockFilter()}function adaptMapConfig(){mapConfig.layerOrder=["features","region","catchment"]}function loadAndSelect(e,t,o){const n=document.querySelector(e)?.tomselect;if(n)return new Promise((e=>{const o=()=>{n.options[t]&&(n.setValue(t),n.off("load",o),e())};n.on("load",o),n.load(t)}))}async function clickedFeature(e){lockForm();const t=e.layer.feature,o=t.properties.id,n=await fetchFeatureDetails(o);renderFeatureDetails(n),await loadAndSelect(`#id_level_${t.properties.level}`,o,`${n.name} (${n.nuts_id})`)}function getQueryParameters(){const e=new URLSearchParams(window.location.search);if(0===[...e.keys()].length){e.append("levl_code","0");const t=`${window.location.pathname}?${e.toString()}`;window.history.replaceState({},"",t)}return e}function setTomSelectValue(e,t,o){const n=document.querySelector(e);if(!n)return void console.warn(`Select element not found: ${e}`);if(!n.tomselect)return void console.warn(`TomSelect not initialized for: ${e}`);const a=n.tomselect.options[t];setProgrammaticChange((()=>{a||(console.log("Adding option to TomSelect"),console.log(t),console.log(o),n.tomselect.load(t),n.tomselect.setValue(t))}))}async function populateParents(e){try{const t=await fetch(`/maps/api/nutsregion/${e}/parents/`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const o=await t.json();for(const[e,t]of Object.entries(o)){const o=e.split("_")[1];t&&setTomSelectValue(`#id_level_${o}`,t.id,t.name)}}catch(e){console.error("Error fetching parent regions:",e)}}function setProgrammaticChange(e){isProgrammaticChange=!0,e(),isProgrammaticChange=!1}async function updateMapAccordingToSelection(){console.log("Updating map according to selection");const e=document.getElementById("id_level_0").value;console.log(e);const t=document.getElementById("id_level_1").value;console.log(t);const o=document.getElementById("id_level_2").value;console.log(o);const n=document.getElementById("id_level_3").value;console.log(n);const a=n||o||t||e;console.log(a),a?(mapConfig.adjustBoundsToLayer="catchment",setLayerOrder(["region","features","catchment"]),n?(console.log("Updating map according to selection level 3"),await updateLayers({catchment_params:{id:a},feature_params:{id:a}})):(console.log("Updating map according to selection"),await updateLayers({catchment_params:{id:a},feature_params:{parent_id:a}}))):(mapConfig.adjustBoundsToLayer="region",setLayerOrder(["features","region"]),await updateLayers({feature_params:{levl_code:0}}))}function clearFields(e){setProgrammaticChange((()=>{e.forEach((function(e){const t=document.getElementById(`id_${e}`);if(t){t.value=null;const e=new Event("change",{bubbles:!0});t.dispatchEvent(e)}}))}))}function resetFeatureDetails(){setLayerOrder(defaultLayerOrder),renderFeatureDetails({})}const changedSelect=async function(e){if(isProgrammaticChange||"SELECT"!==e.target.tagName)return;lockForm();const t=e.target.id;let o=e.target.value;if(o);else{"id_level_0"===t&&resetFeatureDetails();const e={id_level_1:"id_level_0",id_level_2:"id_level_1",id_level_3:"id_level_2"};e[t]&&(o=document.getElementById(e[t]).value)}if(await updateMapAccordingToSelection(),o){const e=await fetchFeatureDetails(o);await renderFeatureDetails(e)}};function clearLowerFields(e){}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("form");e&&e.addEventListener("change",(e=>{"SELECT"===e.target.tagName&&changedSelect(e)})),setTimeout((()=>{Object.entries({id_level_0:0,id_level_1:1,id_level_2:2,id_level_3:3}).forEach((([e,t])=>{const o=document.getElementById(e);if(!o||!o.tomselect)return;const n=o.tomselect.settings.load;o.tomselect.settings.load=function(e,o){return n.call(this,e,o,{level_code:t})}}))}),500)}));