# Generated by Django 3.2.10 on 2022-03-30 10:18

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bibliography', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catchment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created at')),
                ('lastmodified_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Last modified at')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('administrative', 'administrative'), ('custom', 'custom'), ('nuts', 'nuts'), ('lau', 'lau')], default='custom', max_length=14)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_catchment_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('lastmodified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_catchment_lastmodified', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoPolygon',
            fields=[
                ('fid', models.BigAutoField(primary_key=True, serialize=False)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created at')),
                ('lastmodified_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Last modified at')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('country', models.CharField(max_length=56)),
                ('borders', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='maps.geopolygon')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_region_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('lastmodified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_region_lastmodified', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('visible_to_groups', models.ManyToManyField(to='auth.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoreferencedCatchment',
            fields=[
                ('catchment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='maps.catchment')),
                ('geopolygon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maps.geopolygon')),
            ],
            options={
                'abstract': False,
            },
            bases=('maps.geopolygon', 'maps.catchment'),
        ),
        migrations.CreateModel(
            name='GeoreferencedRegion',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='maps.region')),
                ('geopolygon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maps.geopolygon')),
            ],
            options={
                'abstract': False,
            },
            bases=('maps.geopolygon', 'maps.region'),
        ),
        migrations.CreateModel(
            name='NutsRegion',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maps.region')),
                ('nuts_id', models.CharField(blank=True, max_length=5, null=True)),
                ('levl_code', models.IntegerField(blank=True, null=True)),
                ('cntr_code', models.CharField(blank=True, max_length=2, null=True)),
                ('name_latn', models.CharField(blank=True, max_length=70, null=True)),
                ('nuts_name', models.CharField(blank=True, max_length=106, null=True)),
                ('mount_type', models.IntegerField(blank=True, null=True)),
                ('urbn_type', models.IntegerField(blank=True, null=True)),
                ('coast_type', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='maps.nutsregion')),
            ],
            options={
                'abstract': False,
            },
            bases=('maps.region',),
        ),
        migrations.CreateModel(
            name='SFBSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created at')),
                ('lastmodified_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Last modified at')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_sfbsite_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('lastmodified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_sfbsite_lastmodified', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('visible_to_groups', models.ManyToManyField(to='auth.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created at')),
                ('lastmodified_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Last modified at')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('preview', models.ImageField(default='img/generic_map.png', upload_to='images')),
                ('publish', models.BooleanField(default=False)),
                ('model_name', models.CharField(choices=[('HamburgRoadsideTrees', 'HamburgRoadsideTrees'), ('HamburgGreenAreas', 'HamburgGreenAreas'), ('NantesGreenhouses', 'NantesGreenhouses'), ('NutsRegion', 'NutsRegion'), ('WasteCollection', 'WasteCollection')], max_length=56, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_geodataset_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('lastmodified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_geodataset_lastmodified', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.region')),
                ('sources', models.ManyToManyField(to='bibliography.Source')),
                ('visible_to_groups', models.ManyToManyField(to='auth.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='catchment',
            name='parent_region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_catchments', to='maps.region'),
        ),
        migrations.AddField(
            model_name='catchment',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='maps.region'),
        ),
        migrations.AddField(
            model_name='catchment',
            name='visible_to_groups',
            field=models.ManyToManyField(to='auth.Group'),
        ),
        migrations.CreateModel(
            name='GeoreferencedNutsRegion',
            fields=[
                ('nutsregion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='maps.nutsregion')),
                ('geopolygon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maps.geopolygon')),
            ],
            options={
                'abstract': False,
            },
            bases=('maps.geopolygon', 'maps.nutsregion'),
        ),
        migrations.CreateModel(
            name='LauRegion',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maps.region')),
                ('cntr_code', models.CharField(blank=True, max_length=2, null=True)),
                ('lau_id', models.CharField(blank=True, max_length=13, null=True)),
                ('lau_name', models.CharField(blank=True, max_length=113, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('nuts_parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lau_children', to='maps.nutsregion')),
            ],
            options={
                'abstract': False,
            },
            bases=('maps.region',),
        ),
    ]
