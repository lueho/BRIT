"use strict";class DynamicFormset{constructor(e){this.prefix=e.formPrefix,this.formId=e.formId||null,this.formsetType=e.formsetType||"standard";const t=this.formId?`${this.formId}_`:"";this.selContainer=e.containerSelector||`#${t}formset-container`,this.selEmpty=e.emptyFormSelector||`#${t}empty-form-row`,this.selAddBtn=e.addButtonSelector||`#${t}add-form`,this.container=document.querySelector(this.selContainer),this.empty=document.querySelector(this.selEmpty),this.btnAdd=document.querySelector(this.selAddBtn),this.total=document.querySelector(`#id_${this.prefix}-TOTAL_FORMS`),this.container&&this.empty&&this.btnAdd&&this.total?this.init():console.error("Formset: required elements missing for prefix",this.prefix)}init(){this.btnAdd.addEventListener("click",(e=>this.addRow(e))),document.addEventListener("click",(e=>{e.target.closest(`${this.selContainer} .remove-form`)&&this.onRemove(e)})),console.debug(`Formset initialized: ${this.prefix} (type: ${this.formsetType})`)}addRow(e){e.preventDefault();const t=parseInt(this.total.value),o=this.empty.cloneNode(!0);o.classList.remove("d-none"),o.id="",this.replaceAll(o,"__prefix__",t),this.container.appendChild(o),this.total.value=t+1,this.initWidgets(o);const i=new CustomEvent("formset:row-added",{detail:{row:o,formsetPrefix:this.prefix}});return document.dispatchEvent(i),o}replaceAll(e,t,o){const i="string"==typeof t?new RegExp(t,"g"):t;Array.from(e.attributes||[]).forEach((t=>{const n=t.value.replace(i,o);n!==t.value&&e.setAttribute(t.name,n)})),e.nodeType===Node.ELEMENT_NODE&&"SCRIPT"===e.tagName&&i.test(e.textContent)&&(e.textContent=e.textContent.replace(i,o)),Array.from(e.childNodes).forEach((e=>this.replaceAll(e,i,o)))}initWidgets(e){"tomselect"===this.formsetType&&this.initTomSelectWidgets(e)}initTomSelectWidgets(e){if(e.querySelectorAll(".ts-wrapper").forEach((e=>e.remove())),this.executeScripts(e),window.djangoTomSelect?.reinitialize)try{window.djangoTomSelect.reinitialize(e),e.querySelectorAll("select[data-tomselect]").forEach((e=>{e.tomselect||(window.djangoTomSelect?.initialize?window.djangoTomSelect.initialize(e,{}):"undefined"!=typeof TomSelect&&new TomSelect(e))}))}catch(e){console.error("TomSelect reinitialize failed:",e)}else window.djangoTomSelect?.initialize?e.querySelectorAll("select[data-tomselect='true']").forEach((e=>{try{e.classList.remove("tomselected","ts-hidden-accessible"),e.tomselect&&e.tomselect.destroy(),window.djangoTomSelect.initialize(e)}catch(e){console.error("Failed to initialize django-tomselect:",e)}})):"undefined"!=typeof TomSelect?e.querySelectorAll("select[data-tomselect]").forEach((e=>{try{if(e.tomselect&&e.tomselect.destroy(),e.dataset.tomselect&&"true"!==e.dataset.tomselect){const t=JSON.parse(e.dataset.tomselect);new TomSelect(e,t)}else new TomSelect(e)}catch(e){console.error("Failed to initialize TomSelect:",e)}})):console.warn("TomSelect not loaded but trying to initialize TomSelect widgets")}executeScripts(e){e.querySelectorAll("script").forEach((e=>{const t=document.createElement("script");Array.from(e.attributes).forEach((e=>{t.setAttribute(e.name,e.value)}));let o=e.textContent;o.includes("window.djangoTomSelect.initialize")&&o.includes("DOMContentLoaded")&&(console.debug("Modifying TomSelect script for dynamic formset row"),o=o.replace(/document\.addEventListener\s*\(\s*['"`]DOMContentLoaded['"`]\s*,\s*\(\s*\)\s*=>\s*\{([\s\S]*?)\}\s*\)\s*;/g,"(() => {$1})();"),o=o.replace(/document\.addEventListener\s*\(\s*['"`]DOMContentLoaded['"`]\s*,\s*function\s*\(\s*\)\s*\{([\s\S]*?)\}\s*\)\s*;/g,"(function() {$1})();")),t.textContent=o,e.parentNode.replaceChild(t,e)}))}onRemove(e){e.preventDefault();const t=e.target.closest(".remove-form").closest(".formset-form-row"),o=t.querySelector('input[id$="-DELETE"]');o?(o.value="on",t.style.display="none"):(t.remove(),this.renumber());const i=new CustomEvent("formset:row-removed",{detail:{row:t,formsetPrefix:this.prefix}});document.dispatchEvent(i)}renumber(){const e=document.querySelector(`#id_${this.prefix}-TOTAL_FORMS`),t=this.container.querySelectorAll(".formset-form-row:not(.d-none)");e.value=t.length,t.forEach(((e,t)=>{e.querySelectorAll("input, select, textarea, label").forEach((e=>{e.name&&(e.name=e.name.replace(/\d+/,t)),e.id&&(e.id=e.id.replace(/\d+/,t)),e.htmlFor&&(e.htmlFor=e.htmlFor.replace(/\d+/,t))}))}))}}function initDynamicFormset(e){return new DynamicFormset(e)}console.log("formset.js loaded"),document.addEventListener("DOMContentLoaded",(function(){console.log("DOMContentLoaded event fired in formset.js");const e=document.querySelectorAll("[data-formset]");console.log(`Found ${e.length} formset elements:`,e),e.forEach((e=>{const t=e.dataset.formsetType||"standard",o=e.dataset.formset,i=e.dataset.formsetId||null;console.log(`Initializing formset: ${o} (type: ${t}, id: ${i||"none"})`),initDynamicFormset({formPrefix:o,formId:i,formsetType:t})}))})),window.onload=function(){console.log("window.onload event fired in formset.js")};