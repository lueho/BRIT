# Generated by Django 5.1.7 on 2025-04-16 14:31

import django.db.models.deletion
import django.utils.timezone
import utils.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bibliography', '0028_remove_sourceauthor_unique_source_position_and_more'),
        ('materials', '0015_alter_materialcomponent_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticalMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created at')),
                ('lastmodified_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Last modified at')),
                ('publication_status', models.CharField(choices=[('private', 'Private'), ('review', 'Under Review'), ('published', 'Published')], default='private', max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('ontology_uri', models.URLField(blank=True, help_text='External ontology URI (e.g., CHMO term) for this analytical method.', null=True)),
                ('technique', models.CharField(blank=True, help_text='Analytical technique (e.g., ICP-OES, Gravimetry).', max_length=100)),
                ('standard', models.CharField(blank=True, help_text='Standard or protocol (e.g., DIN EN 15936).', max_length=100)),
                ('instrument_type', models.CharField(blank=True, help_text='Type of instrument used (local override if not fetched externally).', max_length=100)),
                ('lower_detection_limit', models.CharField(blank=True, help_text="Lower detection limit (e.g., '0.5 mg/kg').", max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('lastmodified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_lastmodified', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('owner', models.ForeignKey(default=utils.models.get_default_owner_pk, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('sources', models.ManyToManyField(blank=True, help_text='Sources or references for this analytical method.', to='bibliography.source')),
            ],
            options={
                'verbose_name': 'Analytical Method',
                'verbose_name_plural': 'Analytical Methods',
            },
        ),
    ]
